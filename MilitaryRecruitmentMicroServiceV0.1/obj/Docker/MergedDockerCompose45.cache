name: dockercompose10068048574545575832
services:
  airlineapi:
    build:
      context: D:\jounier\git\MilitaryRecruitmentMicroServiceV0.1
      dockerfile: AirLineAPI/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: airlineapi
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 80
      published: "41002"
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    - mode: ingress
      target: 443
      published: "40002"
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\yazon\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\yazon\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  blood_bankapi:
    build:
      context: D:\jounier\git\MilitaryRecruitmentMicroServiceV0.1
      dockerfile: Blood_BankAPI/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: bloodbankapi
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\yazon\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\yazon\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  consul:
    command:
    - consul
    - agent
    - -dev
    - -server
    - -ui
    - -node=server-1
    - -bootstrap-expect=1
    - -client=0.0.0.0
    container_name: consul_server
    image: consul:latest
    network_mode: bridge
    ports:
    - mode: ingress
      target: 8500
      published: "8500"
      protocol: tcp
    - mode: ingress
      target: 8600
      published: "8600"
      protocol: udp
  healthminapi:
    build:
      context: D:\jounier\git\MilitaryRecruitmentMicroServiceV0.1
      dockerfile: HealthMinAPI/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: healthminapi
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 80
      published: "41003"
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    - mode: ingress
      target: 443
      published: "40003"
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\yazon\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\yazon\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  higheduminapi:
    build:
      context: D:\jounier\git\MilitaryRecruitmentMicroServiceV0.1
      dockerfile: HighEduMinAPI/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: higheduminapi
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 80
      published: "41001"
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    - mode: ingress
      target: 443
      published: "40001"
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\yazon\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\yazon\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  loginapi:
    build:
      context: D:\jounier\git\MilitaryRecruitmentMicroServiceV0.1
      dockerfile: LoginAPI/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: loginapi
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 80
      published: "41050"
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    - mode: ingress
      target: 443
      published: "40050"
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\yazon\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  politicalpartiesapi:
    build:
      context: D:\jounier\git\MilitaryRecruitmentMicroServiceV0.1
      dockerfile: PoliticalPartiesAPI/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: politicalpartiesapi
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 80
      published: "41004"
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    - mode: ingress
      target: 443
      published: "40004"
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\yazon\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\yazon\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  sql-server-db:
    container_name: SQL_Server
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: r00t.R00T
    image: mcr.microsoft.com/mssql/server:2019-latest
    networks:
      default: null
    ports:
    - mode: ingress
      target: 1433
      published: "1403"
      protocol: tcp
    volumes:
    - type: volume
      source: sqlvol
      target: /var/opt/mssql
      volume: {}
networks:
  default:
    name: dockercompose10068048574545575832_default
volumes:
  sqlvol:
    name: dockercompose10068048574545575832_sqlvol